{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport { findAllByTestId } from \"@testing-library/react\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport InitialState from \"./InitialState.js\";\nimport ActiveState from \"./ActiveState.js\";\n\nfunction Pomodoro() {\n  //Initialize timer data and state\n  const initialTimerData = {\n    isTimerRunning: false,\n    inSession: false,\n    focusDuration: 25,\n    breakDuration: 5,\n    timeRemaining: 25\n  };\n  const [timerData, setTimerData] = useState({ ...initialTimerData\n  });\n  useInterval(() => {// ToDo: Implement what should happen when the timer is running\n  }, timerData.isTimerRunning ? 1000 : null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InitialState, {\n    initialTimerData: initialTimerData,\n    timerData: timerData,\n    setTimerData: setTimerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActiveState, {\n    initialTimerData: initialTimerData,\n    timerData: timerData,\n    setTimerData: setTimerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["findAllByTestId","React","useState","classNames","useInterval","InitialState","ActiveState","Pomodoro","initialTimerData","isTimerRunning","inSession","focusDuration","breakDuration","timeRemaining","timerData","setTimerData"],"mappings":";AAAA,SAASA,eAAT,QAAgC,wBAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,cAAc,EAAE,KADO;AAEvBC,IAAAA,SAAS,EAAE,KAFY;AAGvBC,IAAAA,aAAa,EAAE,EAHQ;AAIvBC,IAAAA,aAAa,EAAE,CAJQ;AAKvBC,IAAAA,aAAa,EAAE;AALQ,GAAzB;AAOA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAE,GAAGM;AAAL,GAAD,CAA1C;AAEAJ,EAAAA,WAAW,CACT,MAAM,CACJ;AACD,GAHQ,EAITU,SAAS,CAACL,cAAV,GAA2B,IAA3B,GAAkC,IAJzB,CAAX;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,gBAAgB,EAAED,gBAAhC;AAAkD,IAAA,SAAS,EAAEM,SAA7D;AAAwE,IAAA,YAAY,EAAEC,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,gBAAgB,EAAEP,gBAA/B;AAAiD,IAAA,SAAS,EAAEM,SAA5D;AAAuE,IAAA,YAAY,EAAEC,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeR,QAAf","sourcesContent":["import { findAllByTestId } from \"@testing-library/react\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport InitialState from \"./InitialState.js\";\nimport ActiveState from \"./ActiveState.js\";\n\nfunction Pomodoro() {\n  //Initialize timer data and state\n  const initialTimerData = {\n    isTimerRunning: false,\n    inSession: false,\n    focusDuration: 25,\n    breakDuration: 5,\n    timeRemaining: 25,\n  };\n  const [timerData, setTimerData] = useState({ ...initialTimerData });\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n    },\n    timerData.isTimerRunning ? 1000 : null\n  );\n\n  return (\n    <div className=\"pomodoro\">\n      <InitialState initialTimerData={initialTimerData} timerData={timerData} setTimerData={setTimerData} />\n      <ActiveState initialTimerData={initialTimerData} timerData={timerData} setTimerData={setTimerData} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}