{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveState.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\n\nfunction ActiveState({\n  initialTimerData,\n  timerData,\n  setTimerData\n}) {\n  if (timerData.inSession) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"Focusing for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"25:00 remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: \"0%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }))))));\n  } else {}\n}\n\nexport default ActiveState;","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveState.js"],"names":["React","useState","classNames","ActiveState","initialTimerData","timerData","setTimerData","inSession","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,CAArB,EAAoE;AAClE,MAAID,SAAS,CAACE,SAAd,EAAyB;AACvB,wBACI,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,eAIE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF,CAFF,eAYE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAc,GALhB,CAKoB;AALpB;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAZF,CADF,CADJ;AA+BD,GAhCD,MAgCO,CAEN;AACF;;AAED,eAAeN,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction ActiveState({ initialTimerData, timerData, setTimerData }) {\r\n  if (timerData.inSession) {\r\n    return (\r\n        <>\r\n          <div>\r\n            {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                <h2 data-testid=\"session-title\">Focusing for 25:00 minutes</h2>\r\n                {/* TODO: Update message below to include time remaining in the current session */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                  25:00 remaining\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                  <div\r\n                    className=\"progress-bar\"\r\n                    role=\"progressbar\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\r\n                    style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n  } else {\r\n    \r\n  }\r\n}\r\n\r\nexport default ActiveState;\r\n"]},"metadata":{},"sourceType":"module"}