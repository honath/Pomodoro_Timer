{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveState.js\";\nimport React from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakCheck from \"./BreakCheck.js\";\n\nfunction ActiveState({\n  timerData,\n  setTimerData,\n  formattedDurations\n}) {\n  //If timer is not active/in session, do not show additional HTML\n  if (!timerData.inSession) return null;\n  const startingTime = timerData.isBreak ? timerData.breakDuration * 60 : timerData.focusDuration * 60;\n  const remainingTime = startingTime - timerData.timeRemaining;\n  let percentage = timerData.elapsedValue;\n\n  if (timerData.timeRemaining < startingTime) {\n    percentage = Math.round(100 * (remainingTime / startingTime));\n    console.log(percentage);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BreakCheck, {\n    timerData: timerData,\n    formattedDurations: formattedDurations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, formattedDurations.timer, \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percentage,\n    style: {\n      width: `${percentage}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default ActiveState;","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveState.js"],"names":["React","useInterval","BreakCheck","ActiveState","timerData","setTimerData","formattedDurations","inSession","startingTime","isBreak","breakDuration","focusDuration","remainingTime","timeRemaining","percentage","elapsedValue","Math","round","console","log","timer","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA;AAA3B,CAArB,EAAsE;AACpE;AACA,MAAI,CAACF,SAAS,CAACG,SAAf,EAA0B,OAAO,IAAP;AAE1B,QAAMC,YAAY,GAAGJ,SAAS,CAACK,OAAV,GACjBL,SAAS,CAACM,aAAV,GAA0B,EADT,GAEjBN,SAAS,CAACO,aAAV,GAA0B,EAF9B;AAGE,QAAMC,aAAa,GAAGJ,YAAY,GAAGJ,SAAS,CAACS,aAA/C;AAEF,MAAIC,UAAU,GAAGV,SAAS,CAACW,YAA3B;;AAEA,MAAIX,SAAS,CAACS,aAAV,GAA0BL,YAA9B,EAA4C;AAC1CM,IAAAA,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAW,OAAKL,aAAa,GAAGJ,YAArB,CAAX,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEV,SADb;AAEE,IAAA,kBAAkB,EAAEE,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,kBAAkB,CAACc,KADtB,eAPF,CADF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeP,UALjB;AAME,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAG,GAAER,UAAW;AAAvB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAdF,CADF,CADF;AAiCD;;AAED,eAAeX,WAAf","sourcesContent":["import React from \"react\";\r\nimport useInterval from \"../utils/useInterval\";\r\nimport BreakCheck from \"./BreakCheck.js\";\r\n\r\nfunction ActiveState({ timerData, setTimerData, formattedDurations }) {\r\n  //If timer is not active/in session, do not show additional HTML\r\n  if (!timerData.inSession) return null;\r\n\r\n  const startingTime = timerData.isBreak\r\n    ? timerData.breakDuration * 60\r\n    : timerData.focusDuration * 60;\r\n    const remainingTime = startingTime - timerData.timeRemaining;\r\n\r\n  let percentage = timerData.elapsedValue;\r\n\r\n  if (timerData.timeRemaining < startingTime) {\r\n    percentage = Math.round(100*(remainingTime / startingTime));\r\n    console.log(percentage)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <h2 data-testid=\"session-title\">\r\n              <BreakCheck\r\n                timerData={timerData}\r\n                formattedDurations={formattedDurations}\r\n              />\r\n            </h2>\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {formattedDurations.timer} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percentage}\r\n                style={{ width: `${percentage}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ActiveState;\r\n"]},"metadata":{},"sourceType":"module"}